/*

백준 문제 19939번 그리디_박 터뜨리기

개인적으로 이런 문제는 알고리즘 문제로 안나왔으면 한다.
그리디 유형 문제라기보다는 그냥 어떻게든 공식을 찾아내는 문제이다.

계속 보다보면 법칙이 보이는 문제라서 출제된거같기는 한데,
솔직히 별 도움이 안되는 문제이다.

일단 풀이법은 이렇다.
문제에서 요구하는대로 n, k가 주어질때 최대값과 최소값의 차이가 가장 적으려면
값들이 가능한 순차적으로 배열이 되어야 한다.

예를들어 n = 6, k = 3일때
1 2 3 이런식으로 등차수열급으로 증가하는 배열이 만들어 질때가 있고
이때의 결과값은 (3 - 1) = 2 = (k - 1) 이다.

n = 7, k = 3 일때
1 2 4 이런식으로 등차수열급은 아니지만, 증가하는 배열이 만들어질때가 있다.
이때의 결과값은 (4 - 1) = 3 = k 이다.

만약 n = 7, k = 4라면
최대값 - 최소값의 결과값은 음수가 되버린다.
그러면 -1을 리턴을 한다.

결과적으로 차례대로 증가하는 등차수열의 값을 n에서 뺀다음에 그 결과값이
만약 음수라면 -1 리턴
k로 나누어 떨어지면 k - 1 리턴
k로 나누어 떨어지지 않으면 k를 리턴하는 문제이다.

사고력 증진의 문제라기보다는 그냥 수수께끼같은 문제이기에 코딩테스트에 도움이 될 문제는 아니었다.

*/

#include <iostream>

#define endl '\n'

using namespace std;

int solution(int n, int k) {
	if (k > (n / 2))
		return -1;

	for (int i = 1; i <= k; i++)
		n -= i;

	if (n < 0)
		return -1;
	if (n % k == 0)
		return k - 1;
	else
		return k;
}

int main() {
	ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);

	int n, k;
	cin >> n >> k;

	cout << solution(n, k) << endl;

	return 0;
}